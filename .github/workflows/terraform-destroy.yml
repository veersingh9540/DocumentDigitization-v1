name: Terraform Destroy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to destroy'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod
      confirm:
        description: 'Type "destroy-[environment]" to confirm'
        required: true
        type: string

jobs:
  validate:
    name: 'Validate Destroy Request'
    runs-on: ubuntu-latest
    
    steps:
      - name: Check confirmation
        id: check
        run: |
          EXPECTED="destroy-${{ github.event.inputs.environment }}"
          ACTUAL="${{ github.event.inputs.confirm }}"
          
          if [ "$EXPECTED" != "$ACTUAL" ]; then
            echo "::error::Confirmation does not match! Expected '$EXPECTED' but got '$ACTUAL'"
            exit 1
          fi
          
          echo "Confirmation validated. Will proceed with destroying the ${{ github.event.inputs.environment }} environment."
  
  destroy:
    name: 'Destroy Infrastructure'
    runs-on: ubuntu-latest
    needs: validate
    environment: ${{ github.event.inputs.environment }}
    
    env:
      TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION || 'us-east-1' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.5.0'
          
      - name: Terraform Init
        run: |
          cd infrastructure/terraform
          terraform init
        
      - name: Select Workspace
        run: |
          cd infrastructure/terraform
          terraform workspace select ${{ github.event.inputs.environment }} || terraform workspace new ${{ github.event.inputs.environment }}
        
      - name: Terraform Plan Destroy
        run: |
          cd infrastructure/terraform
          terraform plan -destroy -out=tfdestroyplan
        
      - name: Confirm Destruction
        run: |
          echo "ðŸš¨ DANGER! ðŸš¨"
          echo "You are about to destroy the entire ${{ github.event.inputs.environment }} environment."
          echo "Review the plan output above to ensure this is what you want."
          echo "This action will destroy all resources in the environment and cannot be undone."
          echo ""
          echo "Waiting 15 seconds before proceeding with destruction..."
          sleep 15
        
      - name: Terraform Destroy
        run: |
          cd infrastructure/terraform
          terraform apply -auto-approve tfdestroyplan
        
      - name: Notify Destruction Complete
        run: |
          echo "## Destruction Complete" >> $GITHUB_STEP_SUMMARY
          echo "* **Environment**: ${{ github.event.inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "* **Destruction Time**: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "* **Triggered By**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Warning" >> $GITHUB_STEP_SUMMARY
          echo "* All resources in the ${{ github.event.inputs.environment }} environment have been destroyed." >> $GITHUB_STEP_SUMMARY
